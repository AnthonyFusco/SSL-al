contribute(currentType('groovy.lang.Script')) {
    method name: 'law', type: 'builders.LawBuilder', params: [name: 'java.lang.String']
    method name: 'sensorLot', type: 'builders.SensorsLotBuilder', params: [name: 'java.lang.String']
}

contribute(currentType('builders.SensorsLotBuilder')){
    method name: 'sensorsNumber', type: 'builders.SensorsLotBuilder', params: [n: 'java.lang.Integer']
    method name: 'withLaw', type: 'builders.SensorsLotBuilder', params: [law: 'java.lang.String']
    method name: 'withDuration', type: 'builders.SensorsLotBuilder', params: [duration: 'java.lang.Integer']
}



contribute(currentType('builders.LawBuilder')){

    method name: 'ofType', type: 'builders.LawBuilder',
            params: [args: [
                    parameter(name: 'RandomLaw', type: 'java.lang.String'),
                    parameter(name: 'MarkovLaw', type: 'java.lang.String'),
                    parameter(name: 'FunctionLaw', type: 'java.lang.String')
            ]]
}
/*
contribute(currentType('StatesDeclaration')){
    method name: 'transitions', type: 'TransitionDeclaration', params: [from: 'java.lang.String']
}
contribute(currentType('TransitionDeclaration')){
    method name: 'to', type: 'TransitionDeclaration', params: [to: 'java.lang.String']
    method name: 'with', type: 'TransitionDeclaration', params: [p: 'java.lang.Double']
    method name: 'and', type: 'TransitionDeclaration', params: [from: 'java.lang.String']
}



*/



